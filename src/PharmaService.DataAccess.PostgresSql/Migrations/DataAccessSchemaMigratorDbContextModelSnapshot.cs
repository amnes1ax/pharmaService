// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PharmaService.DataAccess.PostgresSql;

#nullable disable

namespace PharmaService.DataAccess.PostgresSql.Migrations
{
    [DbContext(typeof(DataAccessSchemaMigratorDbContext))]
    partial class DataAccessSchemaMigratorDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PharmaService.Domain.Entities.Batch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("batch_id");

                    b.Property<DateTimeOffset>("ArrivedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("arrived_on");

                    b.Property<DateTimeOffset?>("CreatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_on");

                    b.Property<DateTimeOffset?>("ExpiredOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expired_on");

                    b.Property<long>("ProductCount")
                        .HasColumnType("bigint")
                        .HasColumnName("product_count");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<Guid>("WarehouseId")
                        .HasColumnType("uuid")
                        .HasColumnName("warehouse_id");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("batches", (string)null);
                });

            modelBuilder.Entity("PharmaService.Domain.Entities.Pharmacy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("pharmacy_id");

                    b.Property<string>("Address")
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.ToTable("pharmacies", (string)null);
                });

            modelBuilder.Entity("PharmaService.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<int?>("ShelfLife")
                        .HasColumnType("integer")
                        .HasColumnName("shelf_life");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.ToTable("products", (string)null);
                });

            modelBuilder.Entity("PharmaService.Domain.Entities.Warehouse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("warehouse_id");

                    b.Property<Guid>("PharmacyId")
                        .HasColumnType("uuid")
                        .HasColumnName("pharmacy_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex("PharmacyId");

                    b.ToTable("warehouses", (string)null);
                });

            modelBuilder.Entity("PharmaService.Domain.Entities.Batch", b =>
                {
                    b.HasOne("PharmaService.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PharmaService.Domain.Entities.Warehouse", "Warehouse")
                        .WithMany("Batches")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("PharmaService.Domain.Entities.Warehouse", b =>
                {
                    b.HasOne("PharmaService.Domain.Entities.Pharmacy", "Pharmacy")
                        .WithMany("Warehouses")
                        .HasForeignKey("PharmacyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pharmacy");
                });

            modelBuilder.Entity("PharmaService.Domain.Entities.Pharmacy", b =>
                {
                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("PharmaService.Domain.Entities.Warehouse", b =>
                {
                    b.Navigation("Batches");
                });
#pragma warning restore 612, 618
        }
    }
}
